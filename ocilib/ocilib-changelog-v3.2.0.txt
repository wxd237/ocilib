2009-04-20 Version 3.2.0 Vincent Rogier vince.rogier@gmail.com

    * Added support for Direct Path Loading
    
      - See section in the documentation (page <module>, section <Direct Path loading>)
      
      - Added handle OCI_DirPath

      - Added OCI_DirPathCreate()
      - Added OCI_DirPathFree()
      - Added OCI_DirPathSetColumn()
      - Added OCI_DirPathPrepare()
      - Added OCI_DirPathSetEntry()
      - Added OCI_DirPathConvert()
      - Added OCI_DirPathLoad()
      - Added OCI_DirPathReset()
      - Added OCI_DirPathFinish()
      - Added OCI_DirPathAbort()
      - Added OCI_DirPathSave()
      - Added OCI_DirPathFlushRow()
      - Added OCI_DirPathSetSize()
      - Added OCI_DirPathSetDateFormat()
      - Added OCI_DirPathSetParallel()
      - Added OCI_DirPathSetNoLog()
      - Added OCI_DirPathEnableCache()
      - Added OCI_DirPathSetCacheSize()
      - Added OCI_DirPathSetBufferSize()
      - Added OCI_DirPathGetCountLoaded()
      - Added OCI_DirPathGetCountProcessed()
      - Added OCI_DirPathGetErrorColumn()
      - Added OCI_DirPathGetErrorRow() 

      - added OCI_HandleGetDirPathStream()
      - added OCI_HandleGetDirPathColArray()
      - added OCI_HandleGetDirPathCtx()

      - Added Exception type OCI_ERR_COLUMN_NOT_FOUND
      - Added Exception type OCI_ERR_DIRPATH_STATE

      - updated demo application with a direct path loading example

    * Modified Database objects describe API

      - OCI_Schema handle has been renamed to OCI_TypeInfo
      - All OCI_SchemaXXX() functions have been renamed to OCI_TypeInfoXXX()
      - constans OCI_SCHEMA_XXX have been renamed to OCI_TIF_XXX
      - Macro have been added to mapped old defines and names to new ones for backward compatibility

    * Extended binding possibilities

      - Added OCI_AllowRebinding()
      - Now different host variables can be rebinded to the same statement

      - New exception OCI_ERR_BIND_ARRAY_SIZE raised
      - Notifiy real array size
      - OCI_SetNullXXX() : check max

    * Extented Object API

      - Added OCI_ObjectGetStruct()
      - Now it's possible to retrieve the underlying C (OTT style) structure of an OCI_Object handle

    * Fixed OCI_Element API

      - Modified OCI_ElemCreate() that takes now an OCI_Schema handle instead of an OCI_Connection handle
      - Fixed OCI_ElementFree() that could not free underlying sub objects OCI handles
      - Fixed segfaults when using local instance of OCI_Elem created wit OCI_ElemCreate()

    * Extended UROWID support

      - Large UROWID hexadecimal strings where truncated to OCI_ROWID_SIZE (default 23) characters
      - Now OCILIB handles correctly UROWID columns (size up to 4000 chars)
 
    * Miscellaneous changes

      - The object cache is now freed when a connection is terminated
      - Internal source file schema.c has renamed to typeinfo.c
        
    * Miscellaneous fixes

      - Fixed internal OCI_StringCopy2to4bytes() when converting internal Oracle UTF16 strings with odd lengths to Unix UTF32 strings
      - Fixed OCI_TimestampToCTime() : members tm_year and tm_mon of the tm structure passed to the function were not properly set
      - Fixed memory leak : when re-executing a prepared statement that hold a SQL 'select', internal OCI column descriptor for each column of the resultset was not freed
      - Fixed implicit conversion of numeric data to string when using OCI_GetString() in mixed and unicode builds : Entire values had a trailing dot.
      - Fixed OCI_LongRead() : internal offset variable was not reset across OCI_FetchNext() calls causing NULL reads after some fetch sequences
      - Fixed memory leak in internal function OCI_ObjectInit()

    * Documentation updates 

      - Added notes in OCI_ConnectionCreate() documentation for using External credentials
      - Added notes in OCI_BindArraySetSize() documentation for modifying input array number of elements betwwen statement executions